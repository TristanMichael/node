version: "3.5"
services:

  eth1:
    container_name: ${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    user: ${LOCAL_UID}:${LOCAL_UID}
    build:
      context: ./
      dockerfile: Geth.DockerFile
      args:
        - USER=${GETH_USER}
        - UID=${LOCAL_UID}
        - DOCKER_TAG=${GETH_DOCKER_TAG}
    image: node/geth
    stop_signal: SIGINT
    stop_grace_period: 2m
    volumes:
      - geth-data:/var/lib/goethereum
    networks:
      - eth1net
    ports:
      - ${ETH1_PORT}:${ETH1_PORT}/tcp
      - ${ETH1_PORT}:${ETH1_PORT}/udp
      - 127.0.0.1:${ETH1_WS_PORT}:${ETH1_WS_PORT}/tcp
      - 127.0.0.1:${ETH1_RPC_PORT}:${ETH1_RPC_PORT}/tcp
    expose:
#      - 6060/tcp      
    entrypoint:
      - geth
      - --nousb
      - --port=${ETH1_PORT}
      - --datadir=/var/lib/goethereum
      - --http
      - --http.addr=0.0.0.0
      - --http.vhosts=eth1,localhost
      - --http.api=eth,net
      - --http.port=${ETH1_RPC_PORT}
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.port=${ETH1_WS_PORT}
      - --ws.api=eth,net
      - --ws.origins=*
#      - --metrics 
#      - --metrics.expensive
#      - --pprof 
#      - --pprof.addr=0.0.0.0
    command: ${ETH1_NETWORK_FLAG}

  eth1-prometheus:
    container_name: ${COMPOSE_PROJECT_NAME}-prometheus
    restart: unless-stopped
    image: prom/prometheus
    volumes:
      - geth-prometheus-data:/prometheus
      - ${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml
    expose:
      - 9090/tcp
    networks:
      - eth1net
    entrypoint:
      - /bin/prometheus
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - eth1

volumes:
  geth-data:
    name: ${COMPOSE_PROJECT_NAME}-data
  geth-prometheus-data:
    name: ${COMPOSE_PROJECT_NAME}-prometheus-data

networks:
  eth1net:
    name: ${COMPOSE_PROJECT_NAME}-net
